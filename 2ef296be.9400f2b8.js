(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{156:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return u}));var r=n(2),o=n(9),a=(n(0),n(237)),i={id:"core-node-operation",title:"General Node Operation"},l={id:"core-node-operation",isDocsHomePage:!1,title:"General Node Operation",description:"A Zilliqa node requires the following information during launch:",source:"@site/docs/core-node-operation.md",permalink:"/dev-portal/docs/core-node-operation",editUrl:"https://github.com/Zilliqa/dev-portal/docs/core-node-operation.md",sidebar:"someSidebar5",previous:{title:"Introduction",permalink:"/dev-portal/docs/core-intro"},next:{title:"Consensus",permalink:"/dev-portal/docs/core-consensus"}},c=[],p={rightToc:c};function u(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"A Zilliqa node requires the following information during launch:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Schnorr key pair"),Object(a.b)("li",{parentName:"ul"},"IP address and listening port"),Object(a.b)("li",{parentName:"ul"},"Sync type"),Object(a.b)("li",{parentName:"ul"},"Whether to retrieve persistence from S3")),Object(a.b)("p",null,"Most other operational parameters are defined in the file ",Object(a.b)("inlineCode",{parentName:"p"},"constants.xml"),"."),Object(a.b)("p",null,"During launch, a node will assume its ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/dev-portal/docs/basics-zil-nodes"}),"identity")," as follows:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"New, shard, or DS node based on sync type and bootstrap conditions (e.g., ",Object(a.b)("inlineCode",{parentName:"li"},"DSInstructionType::SETPRIMARY"),")"),Object(a.b)("li",{parentName:"ul"},"DS or shard guard node if ",Object(a.b)("inlineCode",{parentName:"li"},"GUARD_MODE=true")," and public key is in ",Object(a.b)("inlineCode",{parentName:"li"},"ds_guard")," or ",Object(a.b)("inlineCode",{parentName:"li"},"shard_guard")," list in ",Object(a.b)("inlineCode",{parentName:"li"},"constants.xml")),Object(a.b)("li",{parentName:"ul"},"Lookup node if ",Object(a.b)("inlineCode",{parentName:"li"},"LOOKUP_NODE_MODE=true")),Object(a.b)("li",{parentName:"ul"},"Seed node if ",Object(a.b)("inlineCode",{parentName:"li"},"LOOKUP_NODE_MODE=true")," and ",Object(a.b)("inlineCode",{parentName:"li"},"ARCHIVAL_LOOKUP=true"))),Object(a.b)("p",null,"A node will generally do the following upon startup:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Start the incoming and outgoing message queue managing threads"),Object(a.b)("li",{parentName:"ul"},"Populate some information (e.g., key and IP, list of guard nodes, list of initial DS committee nodes)"),Object(a.b)("li",{parentName:"ul"},"Set up the persistence (e.g., retrieve data from AWS S3)"),Object(a.b)("li",{parentName:"ul"},"Sync up according to sync type specified, and continue operation from there")),Object(a.b)("p",null,"Refer to the other sections for an in-depth description of the operation of the various features."))}u.isMDXComponent=!0},237:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=o.a.createContext({}),u=function(e){var t=o.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=u(e.components);return o.a.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=u(n),b=r,m=d["".concat(i,".").concat(b)]||d[b]||s[b]||a;return n?o.a.createElement(m,l(l({ref:t},p),{},{components:n})):o.a.createElement(m,l({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=b;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);