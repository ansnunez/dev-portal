(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{226:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return s})),r.d(t,"metadata",(function(){return i})),r.d(t,"rightToc",(function(){return d})),r.d(t,"default",(function(){return l}));var o=r(2),n=r(9),a=(r(0),r(237)),s={id:"basics-zil-nodes",title:"Types of Nodes"},i={id:"basics-zil-nodes",isDocsHomePage:!1,title:"Types of Nodes",description:"The Zilliqa Mainnet is composed of several types of nodes that perform different functions or provide specialized services.",source:"@site/docs/basics-zil-nodes.md",permalink:"/dev-portal/docs/basics-zil-nodes",editUrl:"https://github.com/Zilliqa/dev-portal/docs/basics-zil-nodes.md",sidebar:"someSidebar",previous:{title:"Gas",permalink:"/dev-portal/docs/basics-intro-gas"},next:{title:"Sharding Mechanism",permalink:"/dev-portal/docs/basics-zil-sharding"}},d=[{value:"Shard Nodes",id:"shard-nodes",children:[]},{value:"DS Nodes",id:"ds-nodes",children:[]},{value:"Lookup Nodes",id:"lookup-nodes",children:[]},{value:"Seed Nodes",id:"seed-nodes",children:[]},{value:"Staked Seed Nodes",id:"staked-seed-nodes",children:[]}],c={rightToc:d};function l(e){var t=e.components,r=Object(n.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},c,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"The Zilliqa Mainnet is composed of several types of nodes that perform different functions or provide specialized services."),Object(a.b)("p",null,Object(a.b)("img",Object(o.a)({parentName:"p"},{src:"../assets/core/features/network-layout/image01.png",alt:"image01"}))),Object(a.b)("h2",{id:"shard-nodes"},"Shard Nodes"),Object(a.b)("p",null,"Shard nodes are the mining nodes in the Zilliqa Network. They are named as such because they are assigned to one of several clusters (i.e., shards) within the network. Nodes that belong to the same shard process the same set of transactions assigned to their shard. After processing, the nodes must achieve consensus over the transaction set in order to generate the shard's microblock. For their work, shard nodes are rewarded $ZIL at the end of every DS epoch."),Object(a.b)("p",null,"Shard membership is determined by the DS committee after shard nodes successfully submit solutions to a Proof-of-Work (PoW) problem, which occurs once every DS epoch."),Object(a.b)("h2",{id:"ds-nodes"},"DS Nodes"),Object(a.b)("p",null,"DS (Directory Service) nodes are also mining nodes, with the additional responsibilities of (1) aggregating shard microblocks to form the Transaction Block and (2) creating the DS Block at the start of every DS epoch. As with the shard nodes, DS nodes are rewarded $ZIL at the end of every DS epoch."),Object(a.b)("p",null,"The collection of DS nodes in the network is referred to as the DS committee. Unlike the shards, which are completely revised every DS epoch, the DS committee stays relatively stable across several DS epochs, as only a small fraction of the committee is replaced every DS epoch. DS committee membership is determined by Proof-of-Work of a higher difficulty. The length of a DS node's tenure within the committee is also affected by its performance within the duration of the DS epoch."),Object(a.b)("h2",{id:"lookup-nodes"},"Lookup Nodes"),Object(a.b)("p",null,"Lookup nodes are full nodes, i.e., they store all of the blockchain data generated by the DS and shard nodes (including transactions, microblocks, Transaction Blocks, and DS Blocks). Lookups make this data available to end users through JSON-RPC requests. They also provide the data to nodes that are syncing with or attempting to join the network. Finally, lookups also dispatch transactions to the shards and DS Committee."),Object(a.b)("h2",{id:"seed-nodes"},"Seed Nodes"),Object(a.b)("p",null,"Seed nodes (also referred to as archival nodes) are essentially lookup nodes, except they do not directly dispatch transactions to the shards and DS committee. They are used mainly for serving JSON-RPC requests, including creating new transactions. Transactions are regularly bundled by seed nodes and forwarded to lookups for eventual dispatch to the shards and DS committee."),Object(a.b)("h2",{id:"staked-seed-nodes"},"Staked Seed Nodes"),Object(a.b)("p",null,"Staked seed nodes (SSNs) are a variant of seed nodes. SSNs are run by staking partners and are expected to serve JSON-RPC requests from the community. In return for the service, these nodes are regularly given staking rewards in the form of $ZILs. Staking rewards are determined based on the performance of the SSN. For more information on staked seed nodes, please refer to our staking feature documentation in ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/Zilliqa/ZIP/blob/master/zips/zip-3.md"}),"Zilliqa Improvement Proposal #3"),"."))}l.isMDXComponent=!0},237:function(e,t,r){"use strict";r.d(t,"a",(function(){return h})),r.d(t,"b",(function(){return f}));var o=r(0),n=r.n(o);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function d(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=n.a.createContext({}),l=function(e){var t=n.a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},h=function(e){var t=l(e.components);return n.a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},u=n.a.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=d(e,["components","mdxType","originalType","parentName"]),h=l(r),u=o,f=h["".concat(s,".").concat(u)]||h[u]||p[u]||a;return r?n.a.createElement(f,i(i({ref:t},c),{},{components:r})):n.a.createElement(f,i({ref:t},c))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=u;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var c=2;c<a;c++)s[c]=r[c];return n.a.createElement.apply(null,s)}return n.a.createElement.apply(null,r)}u.displayName="MDXCreateElement"}}]);